What CP looks like-

By the Numbers:

1. New feature is designed and ticketed
2. Development Team member is assigned the ticket and creates a git topic branch
3. Development Team member opens a Merge Request when ready for Preview (feedback, peer review, QA test)
4. The Merge Request initiates a series of automations that results in a new Preview
5. The Preview is available at a shareable, secure URL
6. All assigned team members are automatically notified of the Preview URL and every time an update is pushed
7. The Development Team member writes code locally
8.  At relevant intervals the Development Team member pushes their code changes to their remote git repo.
9. Each push initiates a series of automations that results in updates that are continuously available at the Preview URL.
10.  Approvers review and provide feedback on the changes to in a series of iterations.
11. Approver approves the topic branch for merge
12. The topic branch is merged and the dynamic hosting environment and all components are retrograded.
