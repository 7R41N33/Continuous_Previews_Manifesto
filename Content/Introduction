## Introduction / Overview

Over the past two decades since the Agile Manifesto was published, the concepts and technologies that support Continuous Integration, Continuous Delivery, Cloud Native development, Containerization, Microservices, and Container Orchestration have greatly improved the Agility with which software can be built, tested, and delivered. These concepts and technologies have ushered in the now ubiquitous concept of DevOps and have helped break down the silos within the multi-disciplinary teams that must continuously collaborate to build great software.  

Despite these advances, twenty years after the advent of Agile our community still lacks a common lexicon, understanding, and capability for efficiently previewing in-progress development for full-stack applications.  Over the past 2+ years we have listened to the challenges of team software development through interviews with over 150 Developers, DevOps, and Cross-functional team members across a variety of industries and at various levels of business maturity.  

These are our observations:
-The benefits of Previewing are primarily confined to software teams that have the time, resources, and expertise to build and maintain their own internal preview capability - often referred to as an internal Platform as a Service.  
-It's universally beneficial to bring QA/testing into the Development process, to catch issues early, iterate quickly, and to merge clean code into Develop or Main.
-Virtually all teams from can benefit from a Full-Stack Preview capability and industry defined best practices for Previewing i.e. Continuous Previews.
-For most teams a Preview Tool is on their wish list but there’s no clear choices or guidelines provided by either the Open Source Community, the CNCF, or the industry as a whole.
-As a community we are not actively collaborating or innovating towards a well-defined Preview process and technical capability.
-The market is awash in open source and commercially available Continuous Integration, Continuous Delivery, and Deployment tools, but these tools, while useful, are fundamentally lacking for the task of Previewing and facilitating the requisite collaborative teamwork across cross-functional teams to product quality working software.  

Based on these observations, here is what we are doing:
-Releasing and facilitating the community development of a modular, purpose-built, open source Full-stack Preview Tool that will more broadly enable teams and our community to benefit from a Preview capability. 
-Releasing and facilitating community updates to The CP Manifesto.
-Requesting community contributions to both the open source CP method and supporting software.  

https://github.com/UffizziCloud/uffizzi_app

We believe that this open source effort will lead to previously unrealized innovations and broader preview capability access across the community.  The desired end state is for teams to benefit from bringing QA into the development process, tightening their feedback loops, improving Team Agility, adopting a collaborative culture, and ultimately accelerating their software release cycles.

Lastly, we don’t have all the answers - many applications have unique use cases for which CP won’t readily apply.  We want to hear from and learn how you as a community member(s) are solving the challenges of previewing, what you’ve learned along the way, and ways this project can adapt your lessons learned to be broadly beneficial.  Thanks for your consideration and commitment to Open Source Software.
